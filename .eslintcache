[{"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\index.js":"1","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\reportWebVitals.js":"2","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\index.js":"3","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\Header\\index.js":"4","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\Button\\index.js":"5","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\Divider\\index.js":"6","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\Footer\\index.js":"7","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\AllMovies\\index.js":"8","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\MovieCard\\index.js":"9","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\pages\\Login\\index.js":"10","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\pages\\Main\\index.js":"11","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\pages\\Movies\\index.js":"12","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\PrivateRoute.js":"13","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\pages\\SingleMovie\\index.js":"14","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\hooks\\useFetch.js":"15","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\AuthContext\\index.js":"16","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\ContentContext\\index.js":"17","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\ContentContext\\context.js":"18","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\AuthContext\\context.js":"19","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\ContentContext\\Provider.js":"20","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\AuthContext\\Provider.js":"21"},{"size":500,"mtime":1611252259559,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":1436,"mtime":1614933521823,"results":"25","hashOfConfig":"23"},{"size":1188,"mtime":1614933518982,"results":"26","hashOfConfig":"23"},{"size":507,"mtime":1614933518106,"results":"27","hashOfConfig":"23"},{"size":140,"mtime":1611565884381,"results":"28","hashOfConfig":"23"},{"size":933,"mtime":1611574088071,"results":"29","hashOfConfig":"23"},{"size":784,"mtime":1614933518003,"results":"30","hashOfConfig":"23"},{"size":1057,"mtime":1614934346588,"results":"31","hashOfConfig":"23"},{"size":1353,"mtime":1614933522363,"results":"32","hashOfConfig":"23"},{"size":1070,"mtime":1614933522923,"results":"33","hashOfConfig":"23"},{"size":935,"mtime":1614933523487,"results":"34","hashOfConfig":"23"},{"size":466,"mtime":1614933520131,"results":"35","hashOfConfig":"23"},{"size":1878,"mtime":1614933523824,"results":"36","hashOfConfig":"23"},{"size":1555,"mtime":1612978588067,"results":"37","hashOfConfig":"23"},{"size":109,"mtime":1614933521307,"results":"38","hashOfConfig":"23"},{"size":109,"mtime":1614933521764,"results":"39","hashOfConfig":"23"},{"size":117,"mtime":1614933521742,"results":"40","hashOfConfig":"23"},{"size":111,"mtime":1614933520807,"results":"41","hashOfConfig":"23"},{"size":3378,"mtime":1614933521706,"results":"42","hashOfConfig":"23"},{"size":1642,"mtime":1614933520443,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1lqwsyu",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\index.js",[],["95","96"],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\reportWebVitals.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\index.js",["97","98"],"import './index.css';\r\nimport { useState } from 'react';\r\nimport Header from './components/Header';\r\nimport Main from './pages/Main';\r\nimport Login from './pages/Login';\r\nimport Movies from './pages/Movies';\r\nimport SingleMovie from './pages/SingleMovie';\r\nimport Footer from './components/Footer';\r\nimport AllMovies from './components/AllMovies'\r\nimport PrivateRoute from './components/PrivateRoute.js';\r\nimport ContentContext from './contexts/ContentContext';\r\nimport AuthContext from './contexts/AuthContext';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  // Redirect,\r\n  // Link,\r\n  // NavLink\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n\r\n\r\n    <div className=\"App\">\r\n      <Router>\r\n        <AuthContext.Provider>\r\n          <ContentContext.Provider>\r\n            <Header />\r\n            <Switch>\r\n              \r\n              <Route exact path=\"/\">\r\n                <Main />\r\n              </Route>\r\n\r\n              <Route exact path=\"/login\">\r\n                <Login />\r\n              </Route>\r\n\r\n              <PrivateRoute exact path=\"/movies\">\r\n                <Movies />\r\n              </PrivateRoute>\r\n\r\n              <Route exact path=\"/movies/:id\" >\r\n                <SingleMovie />\r\n              </Route>\r\n\r\n            </Switch>\r\n          </ContentContext.Provider>\r\n        </AuthContext.Provider>\r\n      </Router>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\Header\\index.js",["99"],"import './index.css';\r\nimport React, { useContext } from 'react';\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport navimg from '../../imgs/navigationimg.png';\r\nimport Button from '../Button';\r\nimport {\r\n    BrowserRouter as Router,\r\n    // Switch,\r\n    // Route,\r\n    NavLink\r\n} from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n\r\n    const { loginState, setLoginState } = useContext(AuthContext.context);\r\n\r\n\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <NavLink to=\"/\">\r\n                    <div className=\"nav-home-img-box\">\r\n                        <img src={navimg} className=\"nav-home-img\" alt=\"\"></img>\r\n                    </div>\r\n                </NavLink>\r\n                {loginState ?\r\n                    <NavLink to=\"/\">\r\n                        <Button\r\n                            logout={setLoginState}\r\n                            big>Log Out</Button>\r\n                    </NavLink >\r\n                    :\r\n                    <NavLink to=\"/login\">\r\n                        <Button big>Sign In</Button>\r\n                    </NavLink>\r\n                }\r\n            </nav>\r\n        </header>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Header;","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\Button\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\Divider\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\Footer\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\AllMovies\\index.js",["100","101","102"],"import React, { useContext } from 'react';\r\nimport MovieCard from \"../MovieCard\";\r\nimport ContentContext from \"../../contexts/ContentContext\";\r\nimport \"./index.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction AllMovies() {\r\n\r\n  const {movies, favorites, error, isLoading, toggleFavorites, isFavorite} = useContext(ContentContext.context);\r\n\r\n  return (\r\n    <div className=\"movies-content\">\r\n      {isLoading && <p>Loading...</p>}\r\n      {error && <p>{error}</p>}\r\n      {movies.map(({ title, image, description, id, free, video }) => (\r\n        <MovieCard toggle={toggleFavorites} fav={isFavorite(id)} key={id} id={id} image={image} title={title} description={description} free={free} video={video} />\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default AllMovies;\r\n","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\MovieCard\\index.js",["103","104","105","106"],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\pages\\Login\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\pages\\Main\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\pages\\Movies\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\PrivateRoute.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\pages\\SingleMovie\\index.js",["107","108"],"import './index.css';\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport ContentContext from \"../../contexts/ContentContext\";\r\nimport Button from '../../components/Button';\r\n\r\n\r\nfunction SingleMovie() {\r\n\r\n    const [modalVisibility, setModalVisibility] = useState(false);\r\n    const {setSelected, favorites, isFavorite, toggleFavorites, movie} = useContext(ContentContext.context);\r\n    const {id} = useParams();\r\n\r\n    useEffect(() => {\r\n        setSelected(id);\r\n    }, [])\r\n\r\n    console.log(movie)\r\n\r\n    const btnText = favorites.includes(id) ? 'Remove ' : 'Add';\r\n    return (\r\n        <main className='single-movie-main'>\r\n        {modalVisibility ?\r\n            <div className='single-movie-modal' onClick={() => setModalVisibility(false)}>\r\n                <iframe id='selectedIframe' className='single-movie-iframe' src={movie.video} alt={movie.title} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" title={movie.title} allowFullScreen></iframe>\r\n            </div>\r\n            : ''}\r\n        <div className='single-movie-box'>\r\n            <div className='single-movie-img-box'>\r\n                <img className='single-movie-img' src={movie.image}></img>\r\n            </div>\r\n            <div className='single-movie-text-box'>\r\n                <h2>{movie.title}</h2>\r\n                <p>{movie.description}</p>\r\n                <div className='single-movie-buttons-box'>\r\n                    <Button watch={setModalVisibility}>Watch</Button>\r\n                    <Button fav={isFavorite(movie.id)} event={toggleFavorites} id={movie.id}>{btnText}</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </main>\r\n    );\r\n}\r\n\r\nexport default SingleMovie;","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\hooks\\useFetch.js",[],["109","110"],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\AuthContext\\index.js",["111"],"import context from \"./context\";\r\nimport Provider from \"./Provider\";\r\n\r\nexport default { context, Provider };","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\ContentContext\\index.js",["112"],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\ContentContext\\context.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\AuthContext\\context.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\ContentContext\\Provider.js",["113","114"],"import { useState, useEffect, useContext } from \"react\";\r\nimport Context from \"./context\";\r\n\r\nimport AuthContext from \"../AuthContext\";\r\n\r\n\r\nfunction Provider({ children }) {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [favorites, setFavorites] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    const { loginState } = useContext(AuthContext.context);\r\n\r\n    useEffect(async () => {\r\n\r\n        setIsLoading(true);\r\n        try {\r\n            const loginStatus = localStorage.getItem(\"token\") ?\r\n                'https://academy-video-api.herokuapp.com/content/items'\r\n                : 'https://academy-video-api.herokuapp.com/content/free-items/';\r\n\r\n            const response = await fetch(loginStatus, {\r\n                headers: {\r\n                    authorization: localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : ''\r\n                }\r\n            })\r\n            const json = await response.json();\r\n\r\n            if (!response.ok) {\r\n                const error =\r\n                    { 404: \"The thing you're looking for is not there 🤷‍♂️\" }[\r\n                    response.status\r\n                    ] || \"Something went wrong! 😭\";\r\n\r\n                throw new Error(error);\r\n            }\r\n            setMovies(json);\r\n        }\r\n        catch (e) {\r\n            setError(e.message);\r\n        }\r\n        finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [loginState])\r\n\r\n    useEffect(async () => {\r\n\r\n        if (selected.length > 0) {\r\n            setIsLoading(true);\r\n            try {\r\n                const url = `https://academy-video-api.herokuapp.com/content/items/${selected}`;\r\n\r\n                const response = await fetch(url, {\r\n                    headers: {\r\n                        authorization: localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : ''\r\n                    }\r\n                })\r\n                const json = await response.json();\r\n\r\n                if (!response.ok) {\r\n                    const error =\r\n                        { 404: \"The thing you're looking for is not there 🤷‍♂️\" }[\r\n                        response.status\r\n                        ] || \"Something went wrong! 😭\";\r\n\r\n                    throw new Error(error);\r\n                }\r\n                setMovie(json);\r\n            }\r\n            catch (e) {\r\n                setError(e.message);\r\n            }\r\n            finally {\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n    }, [selected])\r\n\r\n    const toggleFavorites = (id) => {\r\n        if (favorites.includes(id)) {\r\n            const newFavorites = favorites.filter(favorite => favorite !== id)\r\n            setFavorites(newFavorites);\r\n        } else {\r\n            setFavorites(favorites.concat(id))\r\n        }\r\n    }\r\n\r\n    const isFavorite = (id) => {\r\n        if (favorites.includes(id)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{ movies, movie, favorites, error, isLoading, toggleFavorites, isFavorite, setSelected, selected }}>\r\n            {children}\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\nexport default Provider;\r\n","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\AuthContext\\Provider.js",["115","116"],"import { useState, useEffect } from \"react\";\r\nimport Context from \"./context\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction Provider({children}) {\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [loginState, setLoginState] = useState(localStorage.getItem(\"token\") ? true : false)\r\n    const [history, setHistory] = useState();\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        fetch(\"https://academy-video-api.herokuapp.com/auth/login \", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ username: username, password: password }),\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                throw Error(res.status);\r\n            })\r\n            .then((data) => {\r\n                console.log(data);\r\n                localStorage.setItem(\"token\", data.token);\r\n                setLoginState(true)\r\n                history.replace(\"/movies\");\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const handleChange = () => {\r\n        setUsername(document.getElementById('username-input').value);\r\n        setPassword(document.getElementById('password-input').value);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Context.Provider value={{username, password, loginState, setLoginState, onSubmit, handleChange, setHistory}}>\r\n            {children}\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\nexport default Provider;",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":18},{"ruleId":"121","severity":1,"message":"125","line":9,"column":8,"nodeType":"123","messageId":"124","endLine":9,"endColumn":17},{"ruleId":"121","severity":1,"message":"126","line":10,"column":22,"nodeType":"123","messageId":"124","endLine":10,"endColumn":28},{"ruleId":"121","severity":1,"message":"127","line":4,"column":10,"nodeType":"123","messageId":"124","endLine":4,"endColumn":16},{"ruleId":"121","severity":1,"message":"128","line":5,"column":36,"nodeType":"123","messageId":"124","endLine":5,"endColumn":43},{"ruleId":"129","severity":1,"message":"130","line":22,"column":6,"nodeType":"131","endLine":22,"endColumn":16,"suggestions":"132"},{"ruleId":"121","severity":1,"message":"126","line":7,"column":22,"nodeType":"123","messageId":"124","endLine":7,"endColumn":28},{"ruleId":"121","severity":1,"message":"133","line":8,"column":5,"nodeType":"123","messageId":"124","endLine":8,"endColumn":11},{"ruleId":"121","severity":1,"message":"134","line":9,"column":5,"nodeType":"123","messageId":"124","endLine":9,"endColumn":10},{"ruleId":"121","severity":1,"message":"135","line":17,"column":12,"nodeType":"123","messageId":"124","endLine":17,"endColumn":23},{"ruleId":"129","severity":1,"message":"136","line":24,"column":8,"nodeType":"131","endLine":24,"endColumn":18,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":36,"column":21,"nodeType":"140","endLine":36,"endColumn":73},{"ruleId":"117","replacedBy":"141"},{"ruleId":"119","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":4,"column":1,"nodeType":"145","endLine":4,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":4,"column":1,"nodeType":"145","endLine":4,"endColumn":38},{"ruleId":"129","severity":1,"message":"146","line":18,"column":15,"nodeType":"147","endLine":49,"endColumn":6},{"ruleId":"129","severity":1,"message":"146","line":51,"column":15,"nodeType":"147","endLine":82,"endColumn":6},{"ruleId":"121","severity":1,"message":"148","line":1,"column":20,"nodeType":"123","messageId":"124","endLine":1,"endColumn":29},{"ruleId":"121","severity":1,"message":"149","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":20},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'AllMovies' is defined but never used.","'Router' is defined but never used.","'useRef' is defined but never used.","'connect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["152"],"'Switch' is defined but never used.","'Route' is defined but never used.","'setSelected' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'movieId' and 'token'. Either include them or remove the dependency array.",["153"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["150"],["151"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'useEffect' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [dispatch, token]",{"range":"158","text":"159"},"Update the dependencies array to be: [dispatch, movieId, token]",{"range":"160","text":"161"},[684,694],"[dispatch, token]",[843,853],"[dispatch, movieId, token]"]