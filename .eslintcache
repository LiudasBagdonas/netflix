[{"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\index.js":"1","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\reportWebVitals.js":"2","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\index.js":"3","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\components\\PrivateRoute.js":"4","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\pages\\Main\\index.js":"5","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\components\\Footer\\index.js":"6","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\pages\\Login\\index.js":"7","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\pages\\SingleMovie\\index.js":"8","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\pages\\Movies\\index.js":"9","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\components\\Header\\index.js":"10","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\components\\Button\\index.js":"11","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\components\\Divider\\index.js":"12","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\components\\AllMovies\\index.js":"13","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\components\\MovieCard\\index.js":"14"},{"size":500,"mtime":1611252259559,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":1464,"mtime":1614189738968,"results":"18","hashOfConfig":"16"},{"size":466,"mtime":1614189738964,"results":"19","hashOfConfig":"16"},{"size":934,"mtime":1614189738993,"results":"20","hashOfConfig":"16"},{"size":933,"mtime":1611574088071,"results":"21","hashOfConfig":"16"},{"size":2360,"mtime":1614189738988,"results":"22","hashOfConfig":"16"},{"size":324,"mtime":1614189739108,"results":"23","hashOfConfig":"16"},{"size":978,"mtime":1614189739090,"results":"24","hashOfConfig":"16"},{"size":1286,"mtime":1614189738918,"results":"25","hashOfConfig":"16"},{"size":464,"mtime":1614189738867,"results":"26","hashOfConfig":"16"},{"size":140,"mtime":1611565884381,"results":"27","hashOfConfig":"16"},{"size":2940,"mtime":1614189738861,"results":"28","hashOfConfig":"16"},{"size":932,"mtime":1614189738959,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gxm16v",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\reportWebVitals.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\index.js",["63","64"],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\components\\PrivateRoute.js",[],["65","66"],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\pages\\Main\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\components\\Footer\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\pages\\Login\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\pages\\SingleMovie\\index.js",["67","68"],"import './index.css';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction SingleMovie() {\r\n\r\n    // const loc = movies();\r\nconsole.log('dick:')\r\n\r\n    const source = 'https://academy-video-api.herokuapp.com/content/items/:itemId';\r\n\r\n    return (\r\n       <main>penis</main>\r\n    );\r\n}\r\n\r\nexport default SingleMovie;","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\pages\\Movies\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\components\\Header\\index.js",["69","70"],"import './index.css';\r\nimport React from 'react';\r\nimport {useState} from 'react';\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport navimg from '../../imgs/navigationimg.png';\r\nimport Button from '../Button';\r\nimport {\r\n    BrowserRouter as Router,\r\n    // Switch,\r\n    // Route,\r\n    NavLink\r\n} from \"react-router-dom\";\r\n\r\nfunction Header(loginState, setLoginState) {\r\n\r\nconsole.log(loginState)\r\n        return (\r\n            <header>\r\n                <nav>\r\n                    <NavLink to=\"/\">\r\n                        <div className=\"nav-home-img-box\">\r\n                            <img src={navimg} className=\"nav-home-img\" alt=\"\"></img>\r\n                        </div>\r\n                    </NavLink>\r\n                    {loginState.loginState ?\r\n                        <NavLink to=\"/\">\r\n                            <Button \r\n                            logout={loginState.setLoginState} \r\n                            big>Log Out</Button>\r\n                        </NavLink >\r\n                        :\r\n                        <NavLink to=\"/login\">\r\n                            <Button big>Sign In</Button>\r\n                        </NavLink>\r\n                    }\r\n                </nav>\r\n            </header>\r\n        )\r\n\r\n\r\n}\r\n\r\nexport default withRouter(Header);","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\components\\Button\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\components\\Divider\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\components\\AllMovies\\index.js",["71","72","73"],"import React from 'react';\r\nimport MovieCard from \"../MovieCard\";\r\nimport \"./index.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass AllMovies extends React.Component {\r\n  constructor(movie) {\r\n\r\n    super();\r\n    this.state = {\r\n      isLoading: false,\r\n      error: null,\r\n      movies: [],\r\n      favorites: []\r\n    }\r\n  }\r\n\r\n//   componentDidMount() {\r\n//     this.setState({ isLoading: true });\r\n\r\n//     fetch(\"https://academy-video-api.herokuapp.com/content/items\")\r\n//       .then((response) => {\r\n//         if (!response.ok) {\r\n//           throw new Error(\"Something went wrong! 😭\");\r\n//         }\r\n\r\n//         return response.json();\r\n//       })\r\n//       .then((json) => {\r\n//         this.setState({ movies: json });\r\n//       })\r\n//       .catch((e) => {\r\n//         this.setState({ error: e.message });\r\n//       })\r\n//       .finally(() => {\r\n//         this.setState({ isLoading: false });\r\n//       });\r\n//   }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.setState({ isLoading: true });\r\n      const loginStatus = localStorage.getItem(\"token\") ? \r\n      'https://academy-video-api.herokuapp.com/content/items' \r\n      : 'https://academy-video-api.herokuapp.com/content/free-items/';\r\n\r\n      const response = await fetch(loginStatus,{\r\n        headers: {\r\n          authorization: localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : ''\r\n          }})\r\n      const json = await response.json();\r\n      \r\n      \r\n      if (!response.ok) {\r\n        const error =\r\n          { 404: \"The thing you're looking for is not there 🤷‍♂️\" }[\r\n            response.status\r\n          ] || \"Something went wrong! 😭\";\r\n\r\n        throw new Error(error);\r\n      }\r\n\r\n      this.setState({ movies: json });\r\n    } catch (e) {\r\n      this.setState({ error: e.message });\r\n    } finally {\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  toggleFavorites=(id)=> {\r\n    if (this.state.favorites.includes(id)) {\r\n      const newFavorites = this.state.favorites.filter(favorite => favorite !== id )\r\n      this.setState({favorites: newFavorites});\r\n    } else {\r\n      this.setState({favorites: this.state.favorites.concat(id)})\r\n    }\r\n  }\r\n\r\n  isFavorite(id) {\r\n    if (this.state.favorites.includes(id)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, error, movies} = this.state;\r\n    console.log(this.props)\r\n\r\n    return (\r\n      <div className=\"movies-content\">\r\n        {isLoading && <p>Loading...</p>}\r\n        {error && <p>{error}</p>}\r\n        {movies.map(({ title, image, description, id, free, video }) => (\r\n          \r\n          <MovieCard movie={this.props.movie} toggle={this.toggleFavorites} fav={this.isFavorite(id)} key={id} id={id} image={image} title={title} description={description} free={free} video={video}/>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AllMovies);\r\n","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix-redux\\src\\app\\components\\MovieCard\\index.js",["74","75","76"],"import './index.css';\r\nimport Button from '../Button';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    // Redirect,\r\n    Link,\r\n    // NavLink\r\n  } from \"react-router-dom\";\r\n\r\nfunction MovieCard({ title, image, description, free, video, fav, toggle, id, movie }) {\r\n\r\n    const btnText = fav ? 'Remove ' : 'Add';\r\n    console.log('moviecard', movie)\r\n    return (\r\n        <div className=\"movie-card\">\r\n            <Link id={id} to={`/movies/:${id}`}>\r\n                <div className=\"movie-img-box\">\r\n                    <img src={'image'} alt=\"movie img\" />\r\n                </div>\r\n            </Link>\r\n            <div className=\"movie-card-text-box\">\r\n                <h3>{title}</h3>\r\n                <p className=\"movie-description\">{description}</p>\r\n                <Button fav={fav} event={toggle} id={id}>{btnText}</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieCard;",{"ruleId":"77","severity":1,"message":"78","line":9,"column":8,"nodeType":"79","messageId":"80","endLine":9,"endColumn":17},{"ruleId":"77","severity":1,"message":"81","line":23,"column":23,"nodeType":"79","messageId":"80","endLine":23,"endColumn":37},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":24,"column":8,"nodeType":"88","endLine":24,"endColumn":18,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":36,"column":21,"nodeType":"92","endLine":36,"endColumn":73},{"ruleId":"77","severity":1,"message":"93","line":3,"column":9,"nodeType":"79","messageId":"80","endLine":3,"endColumn":17},{"ruleId":"77","severity":1,"message":"94","line":9,"column":22,"nodeType":"79","messageId":"80","endLine":9,"endColumn":28},{"ruleId":"77","severity":1,"message":"95","line":4,"column":10,"nodeType":"79","messageId":"80","endLine":4,"endColumn":16},{"ruleId":"77","severity":1,"message":"96","line":5,"column":36,"nodeType":"79","messageId":"80","endLine":5,"endColumn":43},{"ruleId":"86","severity":1,"message":"97","line":22,"column":6,"nodeType":"88","endLine":22,"endColumn":16,"suggestions":"98"},{"ruleId":"77","severity":1,"message":"94","line":6,"column":22,"nodeType":"79","messageId":"80","endLine":6,"endColumn":28},{"ruleId":"77","severity":1,"message":"99","line":7,"column":5,"nodeType":"79","messageId":"80","endLine":7,"endColumn":11},{"ruleId":"77","severity":1,"message":"100","line":8,"column":5,"nodeType":"79","messageId":"80","endLine":8,"endColumn":10},"no-unused-vars","'AllMovies' is defined but never used.","Identifier","unusedVar","'useSelectMovie' is assigned a value but never used.","no-native-reassign",["101"],"no-negated-in-lhs",["102"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'movieId' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["103"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Router' is defined but never used.","'useRef' is defined but never used.","'connect' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["104"],"'Switch' is defined but never used.","'Route' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [dispatch, movieId, token]",{"range":"109","text":"110"},"Update the dependencies array to be: [dispatch, token]",{"range":"111","text":"112"},[843,853],"[dispatch, movieId, token]",[684,694],"[dispatch, token]"]