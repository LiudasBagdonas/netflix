[{"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\index.js":"1","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\reportWebVitals.js":"2","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\index.js":"3","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\Header\\index.js":"4","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\Button\\index.js":"5","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\Divider\\index.js":"6","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\Footer\\index.js":"7","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\AllMovies\\index.js":"8","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\MovieCard\\index.js":"9","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\pages\\Login\\index.js":"10","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\pages\\Main\\index.js":"11","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\pages\\Movies\\index.js":"12","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\PrivateRoute.js":"13","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\pages\\SingleMovie\\index.js":"14","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\hooks\\useFetch.js":"15","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\AuthContext\\index.js":"16","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\ContentContext\\index.js":"17","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\AuthContext\\Provider.js":"18","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\ContentContext\\Provider.js":"19","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\ContentContext\\context.js":"20","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\AuthContext\\context.js":"21"},{"size":500,"mtime":1611252259559,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":1436,"mtime":1614273174759,"results":"25","hashOfConfig":"23"},{"size":1188,"mtime":1614261670096,"results":"26","hashOfConfig":"23"},{"size":507,"mtime":1614261669984,"results":"27","hashOfConfig":"23"},{"size":140,"mtime":1611565884381,"results":"28","hashOfConfig":"23"},{"size":933,"mtime":1611574088071,"results":"29","hashOfConfig":"23"},{"size":784,"mtime":1614262063473,"results":"30","hashOfConfig":"23"},{"size":1057,"mtime":1614269291136,"results":"31","hashOfConfig":"23"},{"size":1353,"mtime":1614261670345,"results":"32","hashOfConfig":"23"},{"size":1070,"mtime":1614261670354,"results":"33","hashOfConfig":"23"},{"size":935,"mtime":1614271399884,"results":"34","hashOfConfig":"23"},{"size":466,"mtime":1614261670184,"results":"35","hashOfConfig":"23"},{"size":1878,"mtime":1614269560625,"results":"36","hashOfConfig":"23"},{"size":1555,"mtime":1612978588067,"results":"37","hashOfConfig":"23"},{"size":109,"mtime":1614261670289,"results":"38","hashOfConfig":"23"},{"size":109,"mtime":1614261670325,"results":"39","hashOfConfig":"23"},{"size":1642,"mtime":1614261670189,"results":"40","hashOfConfig":"23"},{"size":3378,"mtime":1614261871670,"results":"41","hashOfConfig":"23"},{"size":117,"mtime":1614261670322,"results":"42","hashOfConfig":"23"},{"size":111,"mtime":1614261670193,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1lqwsyu",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\index.js",[],["93","94"],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\reportWebVitals.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\index.js",["95","96"],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\Header\\index.js",["97"],"import './index.css';\r\nimport React, { useContext } from 'react';\r\nimport AuthContext from \"../../contexts/AuthContext\";\r\nimport navimg from '../../imgs/navigationimg.png';\r\nimport Button from '../Button';\r\nimport {\r\n    BrowserRouter as Router,\r\n    // Switch,\r\n    // Route,\r\n    NavLink\r\n} from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n\r\n    const { loginState, setLoginState } = useContext(AuthContext.context);\r\n\r\n\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <NavLink to=\"/\">\r\n                    <div className=\"nav-home-img-box\">\r\n                        <img src={navimg} className=\"nav-home-img\" alt=\"\"></img>\r\n                    </div>\r\n                </NavLink>\r\n                {loginState ?\r\n                    <NavLink to=\"/\">\r\n                        <Button\r\n                            logout={setLoginState}\r\n                            big>Log Out</Button>\r\n                    </NavLink >\r\n                    :\r\n                    <NavLink to=\"/login\">\r\n                        <Button big>Sign In</Button>\r\n                    </NavLink>\r\n                }\r\n            </nav>\r\n        </header>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Header;","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\Button\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\Divider\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\Footer\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\AllMovies\\index.js",["98","99"],"import React, { useContext } from 'react';\r\nimport MovieCard from \"../MovieCard\";\r\nimport ContentContext from \"../../contexts/ContentContext\";\r\nimport \"./index.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction AllMovies() {\r\n\r\n  const {movies, favorites, error, isLoading, toggleFavorites, isFavorite} = useContext(ContentContext.context);\r\n\r\n  return (\r\n    <div className=\"movies-content\">\r\n      {isLoading && <p>Loading...</p>}\r\n      {error && <p>{error}</p>}\r\n      {movies.map(({ title, image, description, id, free, video }) => (\r\n        <MovieCard toggle={toggleFavorites} fav={isFavorite(id)} key={id} id={id} image={image} title={title} description={description} free={free} video={video} />\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default AllMovies;\r\n","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\MovieCard\\index.js",["100","101","102","103"],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\pages\\Login\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\pages\\Main\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\pages\\Movies\\index.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\components\\PrivateRoute.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\pages\\SingleMovie\\index.js",["104","105","106","107"],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\hooks\\useFetch.js",[],["108","109"],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\AuthContext\\index.js",["110"],"import context from \"./context\";\r\nimport Provider from \"./Provider\";\r\n\r\nexport default { context, Provider };","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\ContentContext\\index.js",["111"],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\AuthContext\\Provider.js",["112","113"],"import { useState, useEffect } from \"react\";\r\nimport Context from \"./context\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction Provider({children}) {\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [loginState, setLoginState] = useState(localStorage.getItem(\"token\") ? true : false)\r\n    const [history, setHistory] = useState();\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        fetch(\"https://academy-video-api.herokuapp.com/auth/login \", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ username: username, password: password }),\r\n        })\r\n            .then((res) => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                throw Error(res.status);\r\n            })\r\n            .then((data) => {\r\n                console.log(data);\r\n                localStorage.setItem(\"token\", data.token);\r\n                setLoginState(true)\r\n                history.replace(\"/movies\");\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const handleChange = () => {\r\n        setUsername(document.getElementById('username-input').value);\r\n        setPassword(document.getElementById('password-input').value);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <Context.Provider value={{username, password, loginState, setLoginState, onSubmit, handleChange, setHistory}}>\r\n            {children}\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\nexport default Provider;","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\ContentContext\\Provider.js",["114","115"],"import { useState, useEffect, useContext } from \"react\";\r\nimport Context from \"./context\";\r\n\r\nimport AuthContext from \"../AuthContext\";\r\n\r\n\r\nfunction Provider({ children }) {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [favorites, setFavorites] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    const { loginState } = useContext(AuthContext.context);\r\n\r\n    useEffect(async () => {\r\n\r\n        setIsLoading(true);\r\n        try {\r\n            const loginStatus = localStorage.getItem(\"token\") ?\r\n                'https://academy-video-api.herokuapp.com/content/items'\r\n                : 'https://academy-video-api.herokuapp.com/content/free-items/';\r\n\r\n            const response = await fetch(loginStatus, {\r\n                headers: {\r\n                    authorization: localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : ''\r\n                }\r\n            })\r\n            const json = await response.json();\r\n\r\n            if (!response.ok) {\r\n                const error =\r\n                    { 404: \"The thing you're looking for is not there 🤷‍♂️\" }[\r\n                    response.status\r\n                    ] || \"Something went wrong! 😭\";\r\n\r\n                throw new Error(error);\r\n            }\r\n            setMovies(json);\r\n        }\r\n        catch (e) {\r\n            setError(e.message);\r\n        }\r\n        finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [loginState])\r\n\r\n    useEffect(async () => {\r\n\r\n        if (selected.length > 0) {\r\n            setIsLoading(true);\r\n            try {\r\n                const url = `https://academy-video-api.herokuapp.com/content/items/${selected}`;\r\n\r\n                const response = await fetch(url, {\r\n                    headers: {\r\n                        authorization: localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : ''\r\n                    }\r\n                })\r\n                const json = await response.json();\r\n\r\n                if (!response.ok) {\r\n                    const error =\r\n                        { 404: \"The thing you're looking for is not there 🤷‍♂️\" }[\r\n                        response.status\r\n                        ] || \"Something went wrong! 😭\";\r\n\r\n                    throw new Error(error);\r\n                }\r\n                setMovie(json);\r\n            }\r\n            catch (e) {\r\n                setError(e.message);\r\n            }\r\n            finally {\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n    }, [selected])\r\n\r\n    const toggleFavorites = (id) => {\r\n        if (favorites.includes(id)) {\r\n            const newFavorites = favorites.filter(favorite => favorite !== id)\r\n            setFavorites(newFavorites);\r\n        } else {\r\n            setFavorites(favorites.concat(id))\r\n        }\r\n    }\r\n\r\n    const isFavorite = (id) => {\r\n        if (favorites.includes(id)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{ movies, movie, favorites, error, isLoading, toggleFavorites, isFavorite, setSelected, selected }}>\r\n            {children}\r\n        </Context.Provider>\r\n    );\r\n}\r\n\r\nexport default Provider;\r\n","C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\ContentContext\\context.js",[],"C:\\Users\\liuda\\OneDrive\\Desktop\\netflix\\src\\app\\contexts\\AuthContext\\context.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":18},{"ruleId":"120","severity":1,"message":"124","line":9,"column":8,"nodeType":"122","messageId":"123","endLine":9,"endColumn":17},{"ruleId":"120","severity":1,"message":"125","line":10,"column":22,"nodeType":"122","messageId":"123","endLine":10,"endColumn":28},{"ruleId":"120","severity":1,"message":"126","line":5,"column":10,"nodeType":"122","messageId":"123","endLine":5,"endColumn":20},{"ruleId":"120","severity":1,"message":"127","line":9,"column":18,"nodeType":"122","messageId":"123","endLine":9,"endColumn":27},{"ruleId":"120","severity":1,"message":"125","line":7,"column":22,"nodeType":"122","messageId":"123","endLine":7,"endColumn":28},{"ruleId":"120","severity":1,"message":"128","line":8,"column":5,"nodeType":"122","messageId":"123","endLine":8,"endColumn":11},{"ruleId":"120","severity":1,"message":"129","line":9,"column":5,"nodeType":"122","messageId":"123","endLine":9,"endColumn":10},{"ruleId":"120","severity":1,"message":"130","line":17,"column":12,"nodeType":"122","messageId":"123","endLine":17,"endColumn":23},{"ruleId":"120","severity":1,"message":"131","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":21},{"ruleId":"120","severity":1,"message":"132","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":19},{"ruleId":"133","severity":1,"message":"134","line":17,"column":8,"nodeType":"135","endLine":17,"endColumn":10,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":31,"column":17,"nodeType":"139","endLine":31,"endColumn":69},{"ruleId":"116","replacedBy":"140"},{"ruleId":"118","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":4,"column":1,"nodeType":"144","endLine":4,"endColumn":38},{"ruleId":"142","severity":1,"message":"143","line":4,"column":1,"nodeType":"144","endLine":4,"endColumn":38},{"ruleId":"120","severity":1,"message":"145","line":1,"column":20,"nodeType":"122","messageId":"123","endLine":1,"endColumn":29},{"ruleId":"120","severity":1,"message":"146","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":20},{"ruleId":"133","severity":1,"message":"147","line":18,"column":15,"nodeType":"148","endLine":49,"endColumn":6},{"ruleId":"133","severity":1,"message":"147","line":51,"column":15,"nodeType":"148","endLine":82,"endColumn":6},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'AllMovies' is defined but never used.","'Router' is defined but never used.","'withRouter' is defined but never used.","'favorites' is assigned a value but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'setSelected' is assigned a value but never used.","'useLocation' is defined but never used.","'AuthContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'setSelected'. Either include them or remove the dependency array.","ArrayExpression",["151"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["149"],["150"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'useHistory' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},"Update the dependencies array to be: [id, setSelected]",{"range":"154","text":"155"},[603,605],"[id, setSelected]"]